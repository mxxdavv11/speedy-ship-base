import React, { useState, useEffect } from 'react';
import { supabase } from '@/integrations/supabase/client';
import { ModernCard } from './ModernCard';
import { ShoppingBag, Key, Trash2, Save, RefreshCw } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface MarketplaceCredential {
  id: string;
  marketplace: 'wildberries' | 'ozon';
  api_key: string;
  api_secret?: string;
  is_active: boolean;
}

export const MarketplaceSettings: React.FC = () => {
  const [credentials, setCredentials] = useState<MarketplaceCredential[]>([]);
  const [loading, setLoading] = useState(true);
  const [saving, setSaving] = useState(false);
  const [wbApiKey, setWbApiKey] = useState('');
  const [ozonClientId, setOzonClientId] = useState('');
  const [ozonApiKey, setOzonApiKey] = useState('');
  const { toast } = useToast();

  useEffect(() => {
    loadCredentials();
  }, []);

  const loadCredentials = async () => {
    try {
      const { data, error } = await supabase
        .from('marketplace_credentials')
        .select('*')
        .order('marketplace');

      if (error) throw error;
      
      setCredentials((data || []) as MarketplaceCredential[]);
      
      // –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∫–ª—é—á–∞–º–∏
      const wb = data?.find(c => c.marketplace === 'wildberries');
      const oz = data?.find(c => c.marketplace === 'ozon');
      
      if (wb) setWbApiKey(wb.api_key);
      if (oz) {
        setOzonClientId(oz.api_key);
        setOzonApiKey(oz.api_secret || '');
      }
    } catch (error) {
      console.error('Error loading credentials:', error);
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API',
        variant: 'destructive',
      });
    } finally {
      setLoading(false);
    }
  };

  const saveCredentials = async (marketplace: 'wildberries' | 'ozon') => {
    setSaving(true);
    try {
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) throw new Error('–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');

      const credential = {
        user_id: user.id,
        marketplace,
        api_key: marketplace === 'wildberries' ? wbApiKey : ozonClientId,
        api_secret: marketplace === 'ozon' ? ozonApiKey : null,
        is_active: true,
      };

      const { error } = await supabase
        .from('marketplace_credentials')
        .upsert(credential, {
          onConflict: 'user_id,marketplace',
        });

      if (error) throw error;

      toast({
        title: '–£—Å–ø–µ—à–Ω–æ',
        description: `API –∫–ª—é—á–∏ ${marketplace === 'wildberries' ? 'Wildberries' : 'Ozon'} —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã`,
      });

      await loadCredentials();
    } catch (error) {
      console.error('Error saving credentials:', error);
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å API –∫–ª—é—á–∏',
        variant: 'destructive',
      });
    } finally {
      setSaving(false);
    }
  };

  const deleteCredentials = async (marketplace: 'wildberries' | 'ozon') => {
    try {
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) throw new Error('–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');

      const { error } = await supabase
        .from('marketplace_credentials')
        .delete()
        .eq('user_id', user.id)
        .eq('marketplace', marketplace);

      if (error) throw error;

      toast({
        title: '–£—Å–ø–µ—à–Ω–æ',
        description: `API –∫–ª—é—á–∏ ${marketplace === 'wildberries' ? 'Wildberries' : 'Ozon'} —É–¥–∞–ª–µ–Ω—ã`,
      });

      if (marketplace === 'wildberries') setWbApiKey('');
      if (marketplace === 'ozon') {
        setOzonClientId('');
        setOzonApiKey('');
      }

      await loadCredentials();
    } catch (error) {
      console.error('Error deleting credentials:', error);
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å API –∫–ª—é—á–∏',
        variant: 'destructive',
      });
    }
  };

  if (loading) {
    return (
      <ModernCard className="p-6">
        <div className="flex items-center gap-2">
          <RefreshCw className="w-5 h-5 animate-spin text-primary" />
          <span>–ó–∞–≥—Ä—É–∑–∫–∞...</span>
        </div>
      </ModernCard>
    );
  }

  const hasWbKey = credentials.some(c => c.marketplace === 'wildberries');
  const hasOzonKey = credentials.some(c => c.marketplace === 'ozon');

  return (
    <div className="space-y-6">
      {/* Wildberries */}
      <ModernCard className="p-6">
        <div className="flex items-center gap-3 mb-4">
          <div className="w-12 h-12 bg-purple-500/10 rounded-xl flex items-center justify-center">
            <ShoppingBag className="w-6 h-6 text-purple-500" />
          </div>
          <div>
            <h3 className="text-xl font-semibold">Wildberries</h3>
            <p className="text-sm text-muted-foreground">
              {hasWbKey ? 'API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω ‚úì' : 'API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}
            </p>
          </div>
        </div>

        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium mb-2">
              <Key className="w-4 h-4 inline mr-1" />
              API –ö–ª—é—á
            </label>
            <input
              type="password"
              value={wbApiKey}
              onChange={(e) => setWbApiKey(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á Wildberries"
              className="w-full px-4 py-2 rounded-lg border border-border bg-background focus:ring-2 focus:ring-primary focus:outline-none"
            />
            <p className="text-xs text-muted-foreground mt-1">
              –ü–æ–ª—É—á–∏—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ WB ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –î–æ—Å—Ç—É–ø –∫ API
            </p>
          </div>

          <div className="flex gap-2">
            <button
              onClick={() => saveCredentials('wildberries')}
              disabled={!wbApiKey || saving}
              className="flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              <Save className="w-4 h-4" />
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </button>
            {hasWbKey && (
              <button
                onClick={() => deleteCredentials('wildberries')}
                className="flex items-center gap-2 px-4 py-2 bg-destructive/10 text-destructive rounded-lg hover:bg-destructive/20 transition-colors"
              >
                <Trash2 className="w-4 h-4" />
                –£–¥–∞–ª–∏—Ç—å
              </button>
            )}
          </div>
        </div>
      </ModernCard>

      {/* Ozon */}
      <ModernCard className="p-6">
        <div className="flex items-center gap-3 mb-4">
          <div className="w-12 h-12 bg-blue-500/10 rounded-xl flex items-center justify-center">
            <ShoppingBag className="w-6 h-6 text-blue-500" />
          </div>
          <div>
            <h3 className="text-xl font-semibold">Ozon</h3>
            <p className="text-sm text-muted-foreground">
              {hasOzonKey ? 'API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã ‚úì' : 'API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã'}
            </p>
          </div>
        </div>

        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium mb-2">
              <Key className="w-4 h-4 inline mr-1" />
              Client ID
            </label>
            <input
              type="text"
              value={ozonClientId}
              onChange={(e) => setOzonClientId(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ Client ID"
              className="w-full px-4 py-2 rounded-lg border border-border bg-background focus:ring-2 focus:ring-primary focus:outline-none"
            />
          </div>

          <div>
            <label className="block text-sm font-medium mb-2">
              <Key className="w-4 h-4 inline mr-1" />
              API Key
            </label>
            <input
              type="password"
              value={ozonApiKey}
              onChange={(e) => setOzonApiKey(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ API Key"
              className="w-full px-4 py-2 rounded-lg border border-border bg-background focus:ring-2 focus:ring-primary focus:outline-none"
            />
            <p className="text-xs text-muted-foreground mt-1">
              –ü–æ–ª—É—á–∏—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ Ozon ‚Üí –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí Seller API
            </p>
          </div>

          <div className="flex gap-2">
            <button
              onClick={() => saveCredentials('ozon')}
              disabled={!ozonClientId || !ozonApiKey || saving}
              className="flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              <Save className="w-4 h-4" />
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            </button>
            {hasOzonKey && (
              <button
                onClick={() => deleteCredentials('ozon')}
                className="flex items-center gap-2 px-4 py-2 bg-destructive/10 text-destructive rounded-lg hover:bg-destructive/20 transition-colors"
              >
                <Trash2 className="w-4 h-4" />
                –£–¥–∞–ª–∏—Ç—å
              </button>
            )}
          </div>
        </div>
      </ModernCard>

      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
      <ModernCard glass className="p-6">
        <h4 className="font-semibold mb-3">üìö –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á–∏?</h4>
        <div className="space-y-3 text-sm text-muted-foreground">
          <div>
            <strong className="text-foreground">Wildberries:</strong>
            <ol className="list-decimal list-inside ml-2 mt-1 space-y-1">
              <li>–í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞</li>
              <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –î–æ—Å—Ç—É–ø –∫ API</li>
              <li>–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ –Ω–∞ —á—Ç–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∏ –æ—Å—Ç–∞—Ç–∫–æ–≤</li>
              <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤—ã—à–µ</li>
            </ol>
          </div>
          <div>
            <strong className="text-foreground">Ozon:</strong>
            <ol className="list-decimal list-inside ml-2 mt-1 space-y-1">
              <li>–í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞</li>
              <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí Seller API</li>
              <li>–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ Client ID –∏ API Key</li>
              <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤—ã—à–µ</li>
            </ol>
          </div>
        </div>
      </ModernCard>
    </div>
  );
};
